class OpenAPI {
    openapi: 3.0.1
    info: class Info {
        title: Pet Resource Example
        description: API Definition
        termsOfService: null
        contact: class Contact {
            name: Fred
            url: http://gigantic-server.com
            email: Fred@gigagantic-server.com
        }
        license: class License {
            name: Apache 2.0
            url: http://foo.bar
        }
        version: 2.0
    }
    externalDocs: class ExternalDocumentation {
        description: definition docs desc
        url: null
    }
    servers: [class Server {
        url: http://foo
        description: server 1
        variables: class ServerVariables {
            {}
        }
    }]
    security: [class SecurityRequirement {
        {req 1=[a, b]}
    }, class SecurityRequirement {
        {req 2=[b, c]}
    }]
    tags: [class Tag {
        name: Tag 1
        description: desc 1
        externalDocs: class ExternalDocumentation {
            description: docs desc
            url: null
        }
    }, class Tag {
        name: Tag 2
        description: desc 2
        externalDocs: class ExternalDocumentation {
            description: docs desc 2
            url: null
        }
    }, class Tag {
        name: Tag 3
        description: null
        externalDocs: null
    }, class Tag {
        name: Definition First Tag
        description: null
        externalDocs: null
    }, class Tag {
        name: Definition Second Tag full
        description: desc definition
        externalDocs: null
    }, class Tag {
        name: Fourth Tag Full
        description: desc
        externalDocs: class ExternalDocumentation {
            description: docs desc
            url: null
        }
    }, class Tag {
        name: Fifth Tag Full
        description: desc class
        externalDocs: class ExternalDocumentation {
            description: docs desc class
            url: null
        }
    }]
    paths: class Paths {
        {/pet/{petId}=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: Find pet by ID
                description: Returns a pet when 0 < ID <= 10.  ID > 10 or nonintegers will simulate API error conditions
                externalDocs: null
                operationId: getPetById
                parameters: [class Parameter {
                    name: petId
                    in: path
                    description: ID of pet that needs to be fetched
                    required: true
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class IntegerSchema {
                        class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: null
                            format: null
                            $ref: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        type: integer
                        format: int64
                        _default: null
                        _enum: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }]
                requestBody: null
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: The pet
                        headers: null
                        content: class Content {
                            {application/json=class MediaType {
                                schema: class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: #/components/schemas/Pet
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                examples: null
                                example: null
                                encoding: null
                            }, application/xml=class MediaType {
                                schema: class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: #/components/schemas/Pet
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                examples: null
                                example: null
                                encoding: null
                            }}
                        }
                        links: null
                        $ref: null
                    }, 400=class ApiResponse {
                        description: Invalid ID supplied
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }, 404=class ApiResponse {
                        description: Pet not found
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /pet=class PathItem {
            summary: null
            description: null
            get: null
            put: class Operation {
                tags: null
                summary: Update an existing pet
                description: null
                externalDocs: null
                operationId: updatePet
                parameters: null
                requestBody: class RequestBody {
                    description: Pet object that needs to be added to the store
                    content: class Content {
                        {application/json=class MediaType {
                            schema: class Schema {
                                title: null
                                multipleOf: null
                                maximum: null
                                exclusiveMaximum: null
                                minimum: null
                                exclusiveMinimum: null
                                maxLength: null
                                minLength: null
                                pattern: null
                                maxItems: null
                                minItems: null
                                uniqueItems: null
                                maxProperties: null
                                minProperties: null
                                required: null
                                type: null
                                not: null
                                properties: null
                                additionalProperties: null
                                description: null
                                format: null
                                $ref: #/components/schemas/Pet
                                nullable: null
                                readOnly: null
                                writeOnly: null
                                example: null
                                externalDocs: null
                                deprecated: null
                                discriminator: null
                                xml: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }}
                    }
                    required: true
                }
                responses: class ApiResponses {
                    {400=class ApiResponse {
                        description: Invalid ID supplied
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }, 404=class ApiResponse {
                        description: Pet not found
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }, 405=class ApiResponse {
                        description: Validation exception
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            post: class Operation {
                tags: null
                summary: Add a new pet to the store
                description: null
                externalDocs: null
                operationId: addPet
                parameters: null
                requestBody: class RequestBody {
                    description: Pet object that needs to be added to the store
                    content: class Content {
                        {application/json=class MediaType {
                            schema: class Schema {
                                title: null
                                multipleOf: null
                                maximum: null
                                exclusiveMaximum: null
                                minimum: null
                                exclusiveMinimum: null
                                maxLength: null
                                minLength: null
                                pattern: null
                                maxItems: null
                                minItems: null
                                uniqueItems: null
                                maxProperties: null
                                minProperties: null
                                required: null
                                type: null
                                not: null
                                properties: null
                                additionalProperties: null
                                description: null
                                format: null
                                $ref: #/components/schemas/Pet
                                nullable: null
                                readOnly: null
                                writeOnly: null
                                example: null
                                externalDocs: null
                                deprecated: null
                                discriminator: null
                                xml: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }, application/xml=class MediaType {
                            schema: class Schema {
                                title: null
                                multipleOf: null
                                maximum: null
                                exclusiveMaximum: null
                                minimum: null
                                exclusiveMinimum: null
                                maxLength: null
                                minLength: null
                                pattern: null
                                maxItems: null
                                minItems: null
                                uniqueItems: null
                                maxProperties: null
                                minProperties: null
                                required: null
                                type: null
                                not: null
                                properties: null
                                additionalProperties: null
                                description: null
                                format: null
                                $ref: #/components/schemas/Pet
                                nullable: null
                                readOnly: null
                                writeOnly: null
                                example: null
                                externalDocs: null
                                deprecated: null
                                discriminator: null
                                xml: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }}
                    }
                    required: true
                }
                responses: class ApiResponses {
                    {405=class ApiResponse {
                        description: Invalid input
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /pet/bodynoannotation=class PathItem {
            summary: null
            description: null
            get: null
            put: null
            post: class Operation {
                tags: null
                summary: Add a new pet to the store no annotation
                description: null
                externalDocs: null
                operationId: addPetNoAnnotation
                parameters: null
                requestBody: class RequestBody {
                    description: null
                    content: class Content {
                        {application/json=class MediaType {
                            schema: class Schema {
                                title: null
                                multipleOf: null
                                maximum: null
                                exclusiveMaximum: null
                                minimum: null
                                exclusiveMinimum: null
                                maxLength: null
                                minLength: null
                                pattern: null
                                maxItems: null
                                minItems: null
                                uniqueItems: null
                                maxProperties: null
                                minProperties: null
                                required: null
                                type: null
                                not: null
                                properties: null
                                additionalProperties: null
                                description: null
                                format: null
                                $ref: #/components/schemas/Pet
                                nullable: null
                                readOnly: null
                                writeOnly: null
                                example: null
                                externalDocs: null
                                deprecated: null
                                discriminator: null
                                xml: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }, application/xml=class MediaType {
                            schema: class Schema {
                                title: null
                                multipleOf: null
                                maximum: null
                                exclusiveMaximum: null
                                minimum: null
                                exclusiveMinimum: null
                                maxLength: null
                                minLength: null
                                pattern: null
                                maxItems: null
                                minItems: null
                                uniqueItems: null
                                maxProperties: null
                                minProperties: null
                                required: null
                                type: null
                                not: null
                                properties: null
                                additionalProperties: null
                                description: null
                                format: null
                                $ref: #/components/schemas/Pet
                                nullable: null
                                readOnly: null
                                writeOnly: null
                                example: null
                                externalDocs: null
                                deprecated: null
                                discriminator: null
                                xml: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }}
                    }
                    required: null
                }
                responses: class ApiResponses {
                    {405=class ApiResponse {
                        description: Invalid input
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /pet/bodyid=class PathItem {
            summary: null
            description: null
            get: null
            put: null
            post: class Operation {
                tags: null
                summary: Add a new pet to the store passing an integer with generic parameter annotation
                description: null
                externalDocs: null
                operationId: addPetByInteger
                parameters: null
                requestBody: class RequestBody {
                    description: Pet object that needs to be added to the store
                    content: class Content {
                        {application/json=class MediaType {
                            schema: class IntegerSchema {
                                class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: null
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                type: integer
                                format: int32
                                _default: null
                                _enum: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }, application/xml=class MediaType {
                            schema: class IntegerSchema {
                                class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: null
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                type: integer
                                format: int32
                                _default: null
                                _enum: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }}
                    }
                    required: true
                }
                responses: class ApiResponses {
                    {405=class ApiResponse {
                        description: Invalid input
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /pet/bodyidnoannotation=class PathItem {
            summary: null
            description: null
            get: null
            put: null
            post: class Operation {
                tags: null
                summary: Add a new pet to the store passing an integer without parameter annotation
                description: null
                externalDocs: null
                operationId: addPetByIntegerNoAnnotation
                parameters: null
                requestBody: class RequestBody {
                    description: null
                    content: class Content {
                        {application/json=class MediaType {
                            schema: class IntegerSchema {
                                class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: null
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                type: integer
                                format: int32
                                _default: null
                                _enum: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }, application/xml=class MediaType {
                            schema: class IntegerSchema {
                                class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: null
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                type: integer
                                format: int32
                                _default: null
                                _enum: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }}
                    }
                    required: null
                }
                responses: class ApiResponses {
                    {405=class ApiResponse {
                        description: Invalid input
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /pet/findByStatus=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: Finds Pets by status
                description: Multiple status values can be provided with comma seperated strings
                externalDocs: null
                operationId: findPetsByStatus
                parameters: [class Parameter {
                    name: status
                    in: query
                    description: Status values that need to be considered for filter
                    required: true
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class StringSchema {
                        class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: null
                            format: null
                            $ref: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        type: string
                        _default: null
                        _enum: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }, class Parameter {
                    name: skip
                    in: query
                    description: null
                    required: null
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class IntegerSchema {
                        class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: null
                            format: null
                            $ref: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        type: integer
                        format: int32
                        _default: null
                        _enum: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }, class Parameter {
                    name: limit
                    in: query
                    description: null
                    required: null
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class IntegerSchema {
                        class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: null
                            format: null
                            $ref: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        type: integer
                        format: int32
                        _default: null
                        _enum: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }]
                requestBody: null
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: null
                        headers: null
                        content: class Content {
                            {application/json=class MediaType {
                                schema: class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: #/components/schemas/Pet
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                examples: null
                                example: null
                                encoding: null
                            }}
                        }
                        links: null
                        $ref: null
                    }, 400=class ApiResponse {
                        description: Invalid status value
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /pet/findByTags=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: Finds Pets by tags
                description: Muliple tags can be provided with comma seperated strings. Use tag1, tag2, tag3 for testing.
                externalDocs: null
                operationId: findPetsByTags
                parameters: [class Parameter {
                    name: tags
                    in: query
                    description: Tags to filter by
                    required: true
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class StringSchema {
                        class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: null
                            format: null
                            $ref: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        type: string
                        _default: null
                        _enum: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }]
                requestBody: null
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: Pets matching criteria
                        headers: null
                        content: class Content {
                            {application/json=class MediaType {
                                schema: class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: #/components/schemas/Pet
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                examples: null
                                example: null
                                encoding: null
                            }}
                        }
                        links: null
                        $ref: null
                    }, 400=class ApiResponse {
                        description: Invalid tag value
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /complexcallback=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: Simple get operation
                description: null
                externalDocs: null
                operationId: getWithNoParameters
                parameters: [class Parameter {
                    name: id
                    in: query
                    description: idParam
                    required: null
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class Schema {
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        type: null
                        not: null
                        properties: null
                        additionalProperties: null
                        description: null
                        format: null
                        $ref: #/components/schemas/User
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }]
                requestBody: null
                responses: class ApiResponses {
                    {200=class ApiResponse {
                        description: voila!
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: {testCallback1=class Callback {
                    {http://www.url.com=class PathItem {
                        summary: null
                        description: null
                        get: class Operation {
                            tags: null
                            summary: get all the reviews
                            description: null
                            externalDocs: null
                            operationId: getAllReviews
                            parameters: null
                            requestBody: null
                            responses: class ApiResponses {
                                {200=class ApiResponse {
                                    description: successful operation
                                    headers: null
                                    content: class Content {
                                        {application/json=class MediaType {
                                            schema: class Schema {
                                                title: null
                                                multipleOf: null
                                                maximum: null
                                                exclusiveMaximum: null
                                                minimum: null
                                                exclusiveMinimum: null
                                                maxLength: null
                                                minLength: null
                                                pattern: null
                                                maxItems: null
                                                minItems: null
                                                uniqueItems: null
                                                maxProperties: null
                                                minProperties: null
                                                required: null
                                                type: integer
                                                not: null
                                                properties: null
                                                additionalProperties: null
                                                description: null
                                                format: int32
                                                $ref: null
                                                nullable: null
                                                readOnly: null
                                                writeOnly: null
                                                example: null
                                                externalDocs: null
                                                deprecated: null
                                                discriminator: null
                                                xml: null
                                            }
                                            examples: null
                                            example: null
                                            encoding: null
                                        }}
                                    }
                                    links: null
                                    $ref: null
                                }}
                            }
                            callbacks: null
                            deprecated: null
                            security: null
                            servers: null
                        }
                        put: null
                        post: null
                        delete: null
                        options: null
                        head: null
                        patch: null
                        trace: null
                        servers: null
                        parameters: null
                        $ref: null
                    }}
                }, testCallback2=class Callback {
                    {http://www.url2.com=class PathItem {
                        summary: null
                        description: null
                        get: class Operation {
                            tags: null
                            summary: get a review
                            description: null
                            externalDocs: null
                            operationId: getAnSpecificReviews
                            parameters: null
                            requestBody: null
                            responses: class ApiResponses {
                                {200=class ApiResponse {
                                    description: successful operation
                                    headers: null
                                    content: class Content {
                                        {application/json=class MediaType {
                                            schema: class Schema {
                                                title: null
                                                multipleOf: null
                                                maximum: null
                                                exclusiveMaximum: null
                                                minimum: null
                                                exclusiveMinimum: null
                                                maxLength: null
                                                minLength: null
                                                pattern: null
                                                maxItems: null
                                                minItems: null
                                                uniqueItems: null
                                                maxProperties: null
                                                minProperties: null
                                                required: null
                                                type: null
                                                not: null
                                                properties: null
                                                additionalProperties: null
                                                description: null
                                                format: null
                                                $ref: #/components/schemas/User
                                                nullable: null
                                                readOnly: null
                                                writeOnly: null
                                                example: null
                                                externalDocs: null
                                                deprecated: null
                                                discriminator: null
                                                xml: null
                                            }
                                            examples: null
                                            example: null
                                            encoding: null
                                        }}
                                    }
                                    links: null
                                    $ref: null
                                }}
                            }
                            callbacks: null
                            deprecated: null
                            security: null
                            servers: null
                        }
                        put: null
                        post: null
                        delete: null
                        options: null
                        head: null
                        patch: null
                        trace: null
                        servers: null
                        parameters: null
                        $ref: null
                    }}
                }}
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /multiplecallback=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: Simple get operation
                description: null
                externalDocs: null
                operationId: getWithNoParameters_1
                parameters: null
                requestBody: null
                responses: class ApiResponses {
                    {200=class ApiResponse {
                        description: voila!
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: {testCallback1=class Callback {
                    {http://www.url.com=class PathItem {
                        summary: null
                        description: null
                        get: class Operation {
                            tags: null
                            summary: get all the reviews
                            description: null
                            externalDocs: null
                            operationId: getAllReviews
                            parameters: null
                            requestBody: null
                            responses: class ApiResponses {
                                {200=class ApiResponse {
                                    description: successful operation
                                    headers: null
                                    content: class Content {
                                        {application/json=class MediaType {
                                            schema: class Schema {
                                                title: null
                                                multipleOf: null
                                                maximum: null
                                                exclusiveMaximum: null
                                                minimum: null
                                                exclusiveMinimum: null
                                                maxLength: null
                                                minLength: null
                                                pattern: null
                                                maxItems: null
                                                minItems: null
                                                uniqueItems: null
                                                maxProperties: null
                                                minProperties: null
                                                required: null
                                                type: integer
                                                not: null
                                                properties: null
                                                additionalProperties: null
                                                description: null
                                                format: int32
                                                $ref: null
                                                nullable: null
                                                readOnly: null
                                                writeOnly: null
                                                example: null
                                                externalDocs: null
                                                deprecated: null
                                                discriminator: null
                                                xml: null
                                            }
                                            examples: null
                                            example: null
                                            encoding: null
                                        }}
                                    }
                                    links: null
                                    $ref: null
                                }}
                            }
                            callbacks: null
                            deprecated: null
                            security: null
                            servers: null
                        }
                        put: null
                        post: null
                        delete: null
                        options: null
                        head: null
                        patch: null
                        trace: null
                        servers: null
                        parameters: null
                        $ref: null
                    }}
                }, testCallback2=class Callback {
                    {http://$request.query.url=class PathItem {
                        summary: null
                        description: null
                        get: null
                        put: null
                        post: null
                        delete: null
                        options: null
                        head: null
                        patch: null
                        trace: null
                        servers: null
                        parameters: null
                        $ref: null
                    }}
                }}
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /repeatablecallback=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: Simple get operation
                description: null
                externalDocs: null
                operationId: getWithNoParameters_2
                parameters: null
                requestBody: null
                responses: class ApiResponses {
                    {200=class ApiResponse {
                        description: voila!
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: {testCallback=class Callback {
                    {http://$requests.query.url=class PathItem {
                        summary: null
                        description: null
                        get: null
                        put: null
                        post: null
                        delete: null
                        options: null
                        head: null
                        patch: null
                        trace: null
                        servers: null
                        parameters: null
                        $ref: null
                    }}
                }, testCallback1=class Callback {
                    {http://www.url.com=class PathItem {
                        summary: null
                        description: null
                        get: class Operation {
                            tags: null
                            summary: get all the reviews
                            description: null
                            externalDocs: null
                            operationId: getAllReviews
                            parameters: null
                            requestBody: null
                            responses: class ApiResponses {
                                {200=class ApiResponse {
                                    description: successful operation
                                    headers: null
                                    content: class Content {
                                        {application/json=class MediaType {
                                            schema: class Schema {
                                                title: null
                                                multipleOf: null
                                                maximum: null
                                                exclusiveMaximum: null
                                                minimum: null
                                                exclusiveMinimum: null
                                                maxLength: null
                                                minLength: null
                                                pattern: null
                                                maxItems: null
                                                minItems: null
                                                uniqueItems: null
                                                maxProperties: null
                                                minProperties: null
                                                required: null
                                                type: integer
                                                not: null
                                                properties: null
                                                additionalProperties: null
                                                description: null
                                                format: int32
                                                $ref: null
                                                nullable: null
                                                readOnly: null
                                                writeOnly: null
                                                example: null
                                                externalDocs: null
                                                deprecated: null
                                                discriminator: null
                                                xml: null
                                            }
                                            examples: null
                                            example: null
                                            encoding: null
                                        }}
                                    }
                                    links: null
                                    $ref: null
                                }}
                            }
                            callbacks: null
                            deprecated: null
                            security: null
                            servers: null
                        }
                        put: null
                        post: null
                        delete: null
                        options: null
                        head: null
                        patch: null
                        trace: null
                        servers: null
                        parameters: null
                        $ref: null
                    }}
                }, testCallback2=class Callback {
                    {http://$request.query.url=class PathItem {
                        summary: null
                        description: null
                        get: null
                        put: null
                        post: null
                        delete: null
                        options: null
                        head: null
                        patch: null
                        trace: null
                        servers: null
                        parameters: null
                        $ref: null
                    }}
                }}
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /simplecallback=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: Simple get operation
                description: null
                externalDocs: null
                operationId: getWithNoParameters_3
                parameters: null
                requestBody: null
                responses: class ApiResponses {
                    {200=class ApiResponse {
                        description: voila!
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: {testCallback1=class Callback {
                    {http://www.url.com=class PathItem {
                        summary: null
                        description: null
                        get: class Operation {
                            tags: null
                            summary: get all the reviews
                            description: null
                            externalDocs: null
                            operationId: getAllReviews
                            parameters: null
                            requestBody: null
                            responses: class ApiResponses {
                                {200=class ApiResponse {
                                    description: successful operation
                                    headers: null
                                    content: class Content {
                                        {application/json=class MediaType {
                                            schema: class Schema {
                                                title: null
                                                multipleOf: null
                                                maximum: null
                                                exclusiveMaximum: null
                                                minimum: null
                                                exclusiveMinimum: null
                                                maxLength: null
                                                minLength: null
                                                pattern: null
                                                maxItems: null
                                                minItems: null
                                                uniqueItems: null
                                                maxProperties: null
                                                minProperties: null
                                                required: null
                                                type: integer
                                                not: null
                                                properties: null
                                                additionalProperties: null
                                                description: null
                                                format: int32
                                                $ref: null
                                                nullable: null
                                                readOnly: null
                                                writeOnly: null
                                                example: null
                                                externalDocs: null
                                                deprecated: null
                                                discriminator: null
                                                xml: null
                                            }
                                            examples: null
                                            example: null
                                            encoding: null
                                        }}
                                    }
                                    links: null
                                    $ref: null
                                }}
                            }
                            callbacks: null
                            deprecated: null
                            security: null
                            servers: null
                        }
                        put: null
                        post: null
                        delete: null
                        options: null
                        head: null
                        patch: null
                        trace: null
                        servers: null
                        parameters: null
                        $ref: null
                    }}
                }}
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /example=class PathItem {
            summary: null
            description: null
            get: null
            put: null
            post: class Operation {
                tags: null
                summary: null
                description: subscribes a client to updates relevant to the requestor's account
                externalDocs: null
                operationId: subscribe
                parameters: [class Parameter {
                    name: subscriptionId
                    in: path
                    description: null
                    required: true
                    deprecated: null
                    allowEmptyValue: null
                    style: simple
                    explode: null
                    allowReserved: null
                    schema: class StringSchema {
                        class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: Schema
                            format: null
                            $ref: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: Subscription example
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        type: string
                        _default: null
                        _enum: null
                    }
                    examples: {subscriptionId_2=class Example {
                        summary: Subscription number 54321
                        description: subscriptionId_2
                        value: 54321
                        externalValue: Subscription external value 2
                        $ref: null
                    }, subscriptionId_1=class Example {
                        summary: Subscription number 12345
                        description: subscriptionId_1
                        value: 12345
                        externalValue: Subscription external value 1
                        $ref: null
                    }}
                    example: example
                    content: null
                    $ref: null
                }]
                requestBody: class RequestBody {
                    description: Created user object
                    content: class Content {
                        {*/*=class MediaType {
                            schema: class Schema {
                                title: null
                                multipleOf: null
                                maximum: null
                                exclusiveMaximum: null
                                minimum: null
                                exclusiveMinimum: null
                                maxLength: null
                                minLength: null
                                pattern: null
                                maxItems: null
                                minItems: null
                                uniqueItems: null
                                maxProperties: null
                                minProperties: null
                                required: null
                                type: string
                                not: null
                                properties: null
                                additionalProperties: null
                                description: the generated UUID
                                format: uuid
                                $ref: null
                                nullable: null
                                readOnly: true
                                writeOnly: null
                                example: Schema example
                                externalDocs: null
                                deprecated: null
                                discriminator: null
                                xml: null
                            }
                            examples: {Default Request=class Example {
                                summary: Subscription Request Example
                                description: Default Request
                                value: SubscriptionRequest
                                externalValue: Subscription Request Value
                                $ref: null
                            }}
                            example: null
                            encoding: null
                        }}
                    }
                    required: true
                }
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: test description
                        headers: null
                        content: class Content {
                            {*/*=class MediaType {
                                schema: class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: string
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: the generated UUID
                                    format: uuid
                                    $ref: null
                                    nullable: null
                                    readOnly: true
                                    writeOnly: null
                                    example: Schema example
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                examples: {Default Response=class Example {
                                    summary: Subscription Response Example
                                    description: Default Response
                                    value: SubscriptionResponse
                                    externalValue: Subscription Response value 1
                                    $ref: null
                                }}
                                example: null
                                encoding: null
                            }}
                        }
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /links=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: null
                description: null
                externalDocs: null
                operationId: getUserWithAddress
                parameters: [class Parameter {
                    name: userId
                    in: query
                    description: null
                    required: null
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class StringSchema {
                        class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: null
                            format: null
                            $ref: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        type: string
                        _default: null
                        _enum: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }]
                requestBody: null
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: test description
                        headers: null
                        content: class Content {
                            {*/*=class MediaType {
                                schema: class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: #/components/schemas/User
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                examples: null
                                example: null
                                encoding: null
                            }}
                        }
                        links: {address=class Link {
                            operationRef: null
                            operationId: getAddress
                            parameters: {userId=$request.query.userId}
                            requestBody: null
                            headers: null
                            description: null
                            $ref: null
                        }, user=class Link {
                            operationRef: null
                            operationId: getUser
                            parameters: {userId=$request.query.userId}
                            requestBody: null
                            headers: null
                            description: null
                            $ref: null
                        }}
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /sameOperationName=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: null
                description: Same Operation Name
                externalDocs: null
                operationId: sameOperationName
                parameters: null
                requestBody: null
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: class Content {
                            {*/*=class MediaType {
                                schema: class StringSchema {
                                    class Schema {
                                        title: null
                                        multipleOf: null
                                        maximum: null
                                        exclusiveMaximum: null
                                        minimum: null
                                        exclusiveMinimum: null
                                        maxLength: null
                                        minLength: null
                                        pattern: null
                                        maxItems: null
                                        minItems: null
                                        uniqueItems: null
                                        maxProperties: null
                                        minProperties: null
                                        required: null
                                        type: null
                                        not: null
                                        properties: null
                                        additionalProperties: null
                                        description: null
                                        format: null
                                        $ref: null
                                        nullable: null
                                        readOnly: null
                                        writeOnly: null
                                        example: null
                                        externalDocs: null
                                        deprecated: null
                                        discriminator: null
                                        xml: null
                                    }
                                    type: string
                                    _default: null
                                    _enum: null
                                }
                                examples: null
                                example: null
                                encoding: null
                            }}
                        }
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /sameOperationNameDuplicated=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: null
                description: Same Operation Name Duplicated
                externalDocs: null
                operationId: sameOperationNameDuplicated
                parameters: null
                requestBody: class RequestBody {
                    description: null
                    content: class Content {
                        {*/*=class MediaType {
                            schema: class StringSchema {
                                class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: null
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                type: string
                                _default: null
                                _enum: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }}
                    }
                    required: null
                }
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: class Content {
                            {*/*=class MediaType {
                                schema: class StringSchema {
                                    class Schema {
                                        title: null
                                        multipleOf: null
                                        maximum: null
                                        exclusiveMaximum: null
                                        minimum: null
                                        exclusiveMinimum: null
                                        maxLength: null
                                        minLength: null
                                        pattern: null
                                        maxItems: null
                                        minItems: null
                                        uniqueItems: null
                                        maxProperties: null
                                        minProperties: null
                                        required: null
                                        type: null
                                        not: null
                                        properties: null
                                        additionalProperties: null
                                        description: null
                                        format: null
                                        $ref: null
                                        nullable: null
                                        readOnly: null
                                        writeOnly: null
                                        example: null
                                        externalDocs: null
                                        deprecated: null
                                        discriminator: null
                                        xml: null
                                    }
                                    type: string
                                    _default: null
                                    _enum: null
                                }
                                examples: null
                                example: null
                                encoding: null
                            }}
                        }
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /{petId}=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: Find pet by ID
                description: Returns a pet when 0 < ID <= 10.  ID > 10 or non integers will simulate API error conditions
                externalDocs: class ExternalDocumentation {
                    description: External Annotation Documentation
                    url: http://url.me
                }
                operationId: petId
                parameters: [class Parameter {
                    name: petId
                    in: path
                    description: ID of pet that needs to be fetched
                    required: true
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class IntegerSchema {
                        class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: null
                            format: null
                            $ref: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        type: integer
                        format: int64
                        _default: null
                        _enum: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }]
                requestBody: null
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /fullyannotatedoperation/{petId}=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: Find pet by ID
                description: Returns a pet when 0 < ID <= 10.  ID > 10 or non integers will simulate API error conditions
                externalDocs: null
                operationId: petId_1
                parameters: [class Parameter {
                    name: petId
                    in: path
                    description: ID of pet that needs to be fetched
                    required: true
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class IntegerSchema {
                        class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: null
                            format: null
                            $ref: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        type: integer
                        format: int64
                        _default: null
                        _enum: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }]
                requestBody: null
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: The pet
                        headers: null
                        content: class Content {
                            {*/*=class MediaType {
                                schema: class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: #/components/schemas/Pet
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                examples: null
                                example: null
                                encoding: null
                            }}
                        }
                        links: null
                        $ref: null
                    }, 400=class ApiResponse {
                        description: Invalid ID supplied
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }, 404=class ApiResponse {
                        description: Pet not found
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /interfaceoperation/{petId}=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: Find pet by ID Operation in SubResource
                description: Returns a pet in SubResource
                externalDocs: null
                operationId: getPetById_2
                parameters: [class Parameter {
                    name: petId
                    in: path
                    description: ID of pet that needs to be fetched
                    required: true
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class IntegerSchema {
                        class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: null
                            format: null
                            $ref: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        type: integer
                        format: int64
                        _default: null
                        _enum: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }]
                requestBody: null
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /notannotatedoperation=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: null
                description: null
                externalDocs: null
                operationId: getUser
                parameters: null
                requestBody: null
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: class Content {
                            {*/*=class MediaType {
                                schema: class StringSchema {
                                    class Schema {
                                        title: null
                                        multipleOf: null
                                        maximum: null
                                        exclusiveMaximum: null
                                        minimum: null
                                        exclusiveMinimum: null
                                        maxLength: null
                                        minLength: null
                                        pattern: null
                                        maxItems: null
                                        minItems: null
                                        uniqueItems: null
                                        maxProperties: null
                                        minProperties: null
                                        required: null
                                        type: null
                                        not: null
                                        properties: null
                                        additionalProperties: null
                                        description: null
                                        format: null
                                        $ref: null
                                        nullable: null
                                        readOnly: null
                                        writeOnly: null
                                        example: null
                                        externalDocs: null
                                        deprecated: null
                                        discriminator: null
                                        xml: null
                                    }
                                    type: string
                                    _default: null
                                    _enum: null
                                }
                                examples: null
                                example: null
                                encoding: null
                            }}
                        }
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /notannotatedoperationduplicated=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: null
                description: null
                externalDocs: null
                operationId: getUser_1
                parameters: null
                requestBody: class RequestBody {
                    description: null
                    content: class Content {
                        {*/*=class MediaType {
                            schema: class StringSchema {
                                class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: null
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                type: string
                                _default: null
                                _enum: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }}
                    }
                    required: null
                }
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: class Content {
                            {*/*=class MediaType {
                                schema: class StringSchema {
                                    class Schema {
                                        title: null
                                        multipleOf: null
                                        maximum: null
                                        exclusiveMaximum: null
                                        minimum: null
                                        exclusiveMinimum: null
                                        maxLength: null
                                        minLength: null
                                        pattern: null
                                        maxItems: null
                                        minItems: null
                                        uniqueItems: null
                                        maxProperties: null
                                        minProperties: null
                                        required: null
                                        type: null
                                        not: null
                                        properties: null
                                        additionalProperties: null
                                        description: null
                                        format: null
                                        $ref: null
                                        nullable: null
                                        readOnly: null
                                        writeOnly: null
                                        example: null
                                        externalDocs: null
                                        deprecated: null
                                        discriminator: null
                                        xml: null
                                    }
                                    type: string
                                    _default: null
                                    _enum: null
                                }
                                examples: null
                                example: null
                                encoding: null
                            }}
                        }
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /operationwithouannotation=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: null
                description: null
                externalDocs: null
                operationId: getUser_2
                parameters: null
                requestBody: null
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: class Content {
                            {*/*=class MediaType {
                                schema: class StringSchema {
                                    class Schema {
                                        title: null
                                        multipleOf: null
                                        maximum: null
                                        exclusiveMaximum: null
                                        minimum: null
                                        exclusiveMinimum: null
                                        maxLength: null
                                        minLength: null
                                        pattern: null
                                        maxItems: null
                                        minItems: null
                                        uniqueItems: null
                                        maxProperties: null
                                        minProperties: null
                                        required: null
                                        type: null
                                        not: null
                                        properties: null
                                        additionalProperties: null
                                        description: null
                                        format: null
                                        $ref: null
                                        nullable: null
                                        readOnly: null
                                        writeOnly: null
                                        example: null
                                        externalDocs: null
                                        deprecated: null
                                        discriminator: null
                                        xml: null
                                    }
                                    type: string
                                    _default: null
                                    _enum: null
                                }
                                examples: null
                                example: null
                                encoding: null
                            }}
                        }
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /serversoperation=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: null
                description: Pets Example
                externalDocs: null
                operationId: Pets
                parameters: null
                requestBody: null
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: class Content {
                            {*/*=class MediaType {
                                schema: class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: #/components/schemas/Pet
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                examples: null
                                example: null
                                encoding: null
                            }}
                        }
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: [class Server {
                    url: http://foo2
                    description: server 2
                    variables: class ServerVariables {
                        {}
                    }
                }]
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /arrayschema=class PathItem {
            summary: null
            description: null
            get: null
            put: null
            post: class Operation {
                tags: null
                summary: null
                description: subscribes a client to updates relevant to the requestor's account, as identified by the input token.  The supplied url will be used as the delivery address for response payloads
                externalDocs: null
                operationId: subscribe_1
                parameters: [class Parameter {
                    name: arrayParameter
                    in: query
                    description: null
                    required: true
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class ArraySchema {
                        class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: 10
                            minItems: 1
                            uniqueItems: true
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: null
                            format: null
                            $ref: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        type: array
                        items: class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: null
                            format: null
                            $ref: #/components/schemas/SubscriptionResponse
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }]
                requestBody: null
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: test description
                        headers: null
                        content: class Content {
                            {*/*=class MediaType {
                                schema: class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: #/components/schemas/SubscriptionResponse
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                examples: null
                                example: null
                                encoding: null
                            }}
                        }
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /complexparameter=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: null
                description: null
                externalDocs: null
                operationId: create User_1
                parameters: [class Parameter {
                    name: phone
                    in: path
                    description: Phone
                    required: true
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class StringSchema {
                        class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: null
                            format: null
                            $ref: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        type: string
                        _default: null
                        _enum: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }, class Parameter {
                    name: id
                    in: query
                    description: idParam
                    required: null
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class StringSchema {
                        class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: null
                            format: null
                            $ref: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        type: string
                        _default: null
                        _enum: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }, class Parameter {
                    name: lastName
                    in: query
                    description: null
                    required: null
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class StringSchema {
                        class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: null
                            format: null
                            $ref: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        type: string
                        _default: null
                        _enum: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }, class Parameter {
                    name: address
                    in: query
                    description: address
                    required: null
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class Schema {
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        type: null
                        not: null
                        properties: null
                        additionalProperties: null
                        description: null
                        format: null
                        $ref: #/components/schemas/User
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }]
                requestBody: class RequestBody {
                    description: null
                    content: class Content {
                        {*/*=class MediaType {
                            schema: class StringSchema {
                                class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: null
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                type: string
                                _default: null
                                _enum: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }}
                    }
                    required: null
                }
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: class Content {
                            {*/*=class MediaType {
                                schema: class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: #/components/schemas/User
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                examples: null
                                example: null
                                encoding: null
                            }}
                        }
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /multiplenoannotatedparameter=class PathItem {
            summary: null
            description: null
            get: null
            put: null
            post: class Operation {
                tags: null
                summary: null
                description: null
                externalDocs: null
                operationId: create User
                parameters: null
                requestBody: class RequestBody {
                    description: null
                    content: class Content {
                        {*/*=class MediaType {
                            schema: class StringSchema {
                                class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: null
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                type: string
                                _default: null
                                _enum: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }}
                    }
                    required: null
                }
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /openapijaxrsannotatedparameter=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: null
                description: null
                externalDocs: null
                operationId: create User_2
                parameters: [class Parameter {
                    name: id
                    in: query
                    description: idParam
                    required: null
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class StringSchema {
                        class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: null
                            format: null
                            $ref: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        type: string
                        _default: null
                        _enum: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }]
                requestBody: null
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: class Content {
                            {*/*=class MediaType {
                                schema: class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: #/components/schemas/User
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                examples: null
                                example: null
                                encoding: null
                            }}
                        }
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /openapiwithcontentjaxrsannotatedparameter=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: null
                description: null
                externalDocs: null
                operationId: create User_3
                parameters: [class Parameter {
                    name: id
                    in: query
                    description: idParam
                    required: null
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: null
                    examples: null
                    example: null
                    content: class Content {
                        {*/*=class MediaType {
                            schema: class StringSchema {
                                class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: Id Schema Definition
                                    format: null
                                    $ref: null
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                type: string
                                _default: null
                                _enum: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }}
                    }
                    $ref: null
                }]
                requestBody: null
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: class Content {
                            {*/*=class MediaType {
                                schema: class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: #/components/schemas/User
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                examples: null
                                example: null
                                encoding: null
                            }}
                        }
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /openapiwithimplementationjaxrsannotatedparameter=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: null
                description: null
                externalDocs: null
                operationId: create User_4
                parameters: [class Parameter {
                    name: id
                    in: query
                    description: idParam
                    required: null
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class Schema {
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        type: null
                        not: null
                        properties: null
                        additionalProperties: null
                        description: null
                        format: null
                        $ref: #/components/schemas/User
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }]
                requestBody: null
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: class Content {
                            {*/*=class MediaType {
                                schema: class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: #/components/schemas/User
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                examples: null
                                example: null
                                encoding: null
                            }}
                        }
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /parameters=class PathItem {
            summary: null
            description: null
            get: null
            put: null
            post: class Operation {
                tags: null
                summary: null
                description: subscribes a client to updates relevant to the requestor's account, as identified by the input token.  The supplied url will be used as the delivery address for response payloads
                externalDocs: null
                operationId: subscribe_2
                parameters: [class Parameter {
                    name: subscriptionId
                    in: path
                    description: null
                    required: true
                    deprecated: null
                    allowEmptyValue: null
                    style: simple
                    explode: null
                    allowReserved: null
                    schema: class Schema {
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        type: null
                        not: null
                        properties: null
                        additionalProperties: null
                        description: null
                        format: null
                        $ref: #/components/schemas/SubscriptionResponse
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }, class Parameter {
                    name: formId
                    in: query
                    description: null
                    required: true
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class StringSchema {
                        class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: null
                            format: null
                            $ref: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        type: string
                        _default: null
                        _enum: null
                    }
                    examples: null
                    example: Example
                    content: null
                    $ref: null
                }, class Parameter {
                    name: explodeFalse
                    in: query
                    description: null
                    required: true
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: false
                    allowReserved: null
                    schema: class Schema {
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        type: null
                        not: null
                        properties: null
                        additionalProperties: null
                        description: null
                        format: null
                        $ref: #/components/schemas/SubscriptionResponse
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }, class Parameter {
                    name: explodeTrue
                    in: query
                    description: null
                    required: true
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: true
                    allowReserved: null
                    schema: class Schema {
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        type: null
                        not: null
                        properties: null
                        additionalProperties: null
                        description: null
                        format: null
                        $ref: #/components/schemas/SubscriptionResponse
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }, class Parameter {
                    name: explodeAvoiding
                    in: query
                    description: null
                    required: true
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class StringSchema {
                        class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: the generated id
                            format: id
                            $ref: null
                            nullable: null
                            readOnly: true
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        type: string
                        _default: null
                        _enum: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }, class Parameter {
                    name: arrayParameter
                    in: query
                    description: null
                    required: true
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: null
                    examples: null
                    example: null
                    content: class Content {
                        {application/json=class MediaType {
                            schema: class NumberSchema {
                                class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: the generated id
                                    format: null
                                    $ref: null
                                    nullable: null
                                    readOnly: true
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                type: number
                                _default: null
                                _enum: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }, application/xml=class MediaType {
                            schema: class NumberSchema {
                                class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: the generated id
                                    format: null
                                    $ref: null
                                    nullable: null
                                    readOnly: true
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                type: number
                                _default: null
                                _enum: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }}
                    }
                    $ref: null
                }, class Parameter {
                    name: arrayParameterImplementation
                    in: query
                    description: null
                    required: true
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class ArraySchema {
                        class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: 10
                            minItems: 1
                            uniqueItems: true
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: null
                            format: null
                            $ref: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        type: array
                        items: class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: null
                            format: null
                            $ref: #/components/schemas/SubscriptionResponse
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }, class Parameter {
                    name: arrayParameterImplementation2
                    in: query
                    description: null
                    required: true
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: true
                    allowReserved: null
                    schema: class Schema {
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        type: null
                        not: null
                        properties: null
                        additionalProperties: null
                        description: null
                        format: null
                        $ref: #/components/schemas/SubscriptionResponse
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }, class Parameter {
                    name: id
                    in: query
                    description: idParam
                    required: null
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class StringSchema {
                        class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: null
                            format: null
                            $ref: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        type: string
                        _default: null
                        _enum: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }]
                requestBody: null
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: test description
                        headers: null
                        content: class Content {
                            {*/*=class MediaType {
                                schema: class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: #/components/schemas/SubscriptionResponse
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                examples: null
                                example: null
                                encoding: null
                            }}
                        }
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /repeatableparameter=class PathItem {
            summary: null
            description: null
            get: null
            put: null
            post: class Operation {
                tags: null
                summary: null
                description: subscribes a client to updates relevant to the requestor's account, as identified by the input token.  The supplied url will be used as the delivery address for response payloads
                externalDocs: null
                operationId: subscribe_3
                parameters: [class Parameter {
                    name: subscriptionId
                    in: path
                    description: null
                    required: true
                    deprecated: null
                    allowEmptyValue: null
                    style: simple
                    explode: null
                    allowReserved: null
                    schema: class Schema {
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        type: null
                        not: null
                        properties: null
                        additionalProperties: null
                        description: null
                        format: null
                        $ref: #/components/schemas/SubscriptionResponse
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }, class Parameter {
                    name: formId
                    in: query
                    description: null
                    required: true
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class StringSchema {
                        class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: null
                            format: null
                            $ref: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        type: string
                        _default: null
                        _enum: null
                    }
                    examples: null
                    example: Example
                    content: null
                    $ref: null
                }, class Parameter {
                    name: explodeFalse
                    in: query
                    description: null
                    required: true
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: false
                    allowReserved: null
                    schema: class Schema {
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        type: null
                        not: null
                        properties: null
                        additionalProperties: null
                        description: null
                        format: null
                        $ref: #/components/schemas/SubscriptionResponse
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }, class Parameter {
                    name: explodeTrue
                    in: query
                    description: null
                    required: true
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: true
                    allowReserved: null
                    schema: class Schema {
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        type: null
                        not: null
                        properties: null
                        additionalProperties: null
                        description: null
                        format: null
                        $ref: #/components/schemas/SubscriptionResponse
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }, class Parameter {
                    name: explodeAvoiding
                    in: query
                    description: null
                    required: true
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class StringSchema {
                        class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: the generated id
                            format: id
                            $ref: null
                            nullable: null
                            readOnly: true
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        type: string
                        _default: null
                        _enum: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }, class Parameter {
                    name: arrayParameter
                    in: query
                    description: null
                    required: true
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: null
                    examples: null
                    example: null
                    content: class Content {
                        {application/json=class MediaType {
                            schema: class NumberSchema {
                                class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: the generated id
                                    format: null
                                    $ref: null
                                    nullable: null
                                    readOnly: true
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                type: number
                                _default: null
                                _enum: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }, application/xml=class MediaType {
                            schema: class NumberSchema {
                                class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: the generated id
                                    format: null
                                    $ref: null
                                    nullable: null
                                    readOnly: true
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                type: number
                                _default: null
                                _enum: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }}
                    }
                    $ref: null
                }, class Parameter {
                    name: arrayParameterImplementation
                    in: query
                    description: null
                    required: true
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class ArraySchema {
                        class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: 10
                            minItems: 1
                            uniqueItems: true
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: null
                            format: null
                            $ref: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        type: array
                        items: class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: null
                            format: null
                            $ref: #/components/schemas/SubscriptionResponse
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }, class Parameter {
                    name: arrayParameterImplementation2
                    in: query
                    description: null
                    required: true
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: true
                    allowReserved: null
                    schema: class Schema {
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        type: null
                        not: null
                        properties: null
                        additionalProperties: null
                        description: null
                        format: null
                        $ref: #/components/schemas/SubscriptionResponse
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }]
                requestBody: null
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: test description
                        headers: null
                        content: class Content {
                            {*/*=class MediaType {
                                schema: class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: #/components/schemas/SubscriptionResponse
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                examples: null
                                example: null
                                encoding: null
                            }}
                        }
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /singlejaxrsannotatedparameter=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: null
                description: null
                externalDocs: null
                operationId: create User_5
                parameters: [class Parameter {
                    name: id
                    in: query
                    description: null
                    required: null
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class StringSchema {
                        class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: null
                            format: null
                            $ref: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        type: string
                        _default: null
                        _enum: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }]
                requestBody: null
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: class Content {
                            {*/*=class MediaType {
                                schema: class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: #/components/schemas/User
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                examples: null
                                example: null
                                encoding: null
                            }}
                        }
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /singlenoannotatedparameter=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: null
                description: null
                externalDocs: null
                operationId: create User_6
                parameters: null
                requestBody: class RequestBody {
                    description: null
                    content: class Content {
                        {*/*=class MediaType {
                            schema: class StringSchema {
                                class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: null
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                type: string
                                _default: null
                                _enum: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }}
                    }
                    required: null
                }
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: class Content {
                            {*/*=class MediaType {
                                schema: class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: #/components/schemas/User
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                examples: null
                                example: null
                                encoding: null
                            }}
                        }
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /requestbodymethodpriority=class PathItem {
            summary: null
            description: null
            get: null
            put: null
            post: class Operation {
                tags: null
                summary: Create user
                description: This can only be done by the logged in user.
                externalDocs: null
                operationId: methodWithRequestBodyAndTwoParameters
                parameters: null
                requestBody: class RequestBody {
                    description: Created user object on Method
                    content: class Content {
                        {*/*=class MediaType {
                            schema: class Schema {
                                title: null
                                multipleOf: null
                                maximum: null
                                exclusiveMaximum: null
                                minimum: null
                                exclusiveMinimum: null
                                maxLength: null
                                minLength: null
                                pattern: null
                                maxItems: null
                                minItems: null
                                uniqueItems: null
                                maxProperties: null
                                minProperties: null
                                required: null
                                type: null
                                not: null
                                properties: null
                                additionalProperties: null
                                description: null
                                format: null
                                $ref: #/components/schemas/User
                                nullable: null
                                readOnly: null
                                writeOnly: null
                                example: null
                                externalDocs: null
                                deprecated: null
                                discriminator: null
                                xml: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }}
                    }
                    required: true
                }
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /requestbodyparameterpriority=class PathItem {
            summary: null
            description: null
            get: null
            put: null
            post: class Operation {
                tags: null
                summary: Create user
                description: This can only be done by the logged in user.
                externalDocs: null
                operationId: methodWithRequestBodyAndTwoParameters_1
                parameters: null
                requestBody: class RequestBody {
                    description: Created user object inside Parameter
                    content: class Content {
                        {*/*=class MediaType {
                            schema: class Schema {
                                title: null
                                multipleOf: null
                                maximum: null
                                exclusiveMaximum: null
                                minimum: null
                                exclusiveMinimum: null
                                maxLength: null
                                minLength: null
                                pattern: null
                                maxItems: null
                                minItems: null
                                uniqueItems: null
                                maxProperties: null
                                minProperties: null
                                required: null
                                type: null
                                not: null
                                properties: null
                                additionalProperties: null
                                description: null
                                format: null
                                $ref: #/components/schemas/User
                                nullable: null
                                readOnly: null
                                writeOnly: null
                                example: null
                                externalDocs: null
                                deprecated: null
                                discriminator: null
                                xml: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }}
                    }
                    required: true
                }
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /methodWithRequestBodyAndTwoParameters=class PathItem {
            summary: null
            description: null
            get: null
            put: null
            post: class Operation {
                tags: null
                summary: Create user
                description: This can only be done by the logged in user.
                externalDocs: null
                operationId: methodWithRequestBodyAndTwoParameters_2
                parameters: [class Parameter {
                    name: name
                    in: query
                    description: null
                    required: null
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class StringSchema {
                        class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: null
                            format: null
                            $ref: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        type: string
                        _default: null
                        _enum: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }, class Parameter {
                    name: code
                    in: query
                    description: null
                    required: null
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class StringSchema {
                        class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: null
                            format: null
                            $ref: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        type: string
                        _default: null
                        _enum: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }]
                requestBody: class RequestBody {
                    description: Created user object
                    content: class Content {
                        {*/*=class MediaType {
                            schema: class Schema {
                                title: null
                                multipleOf: null
                                maximum: null
                                exclusiveMaximum: null
                                minimum: null
                                exclusiveMinimum: null
                                maxLength: null
                                minLength: null
                                pattern: null
                                maxItems: null
                                minItems: null
                                uniqueItems: null
                                maxProperties: null
                                minProperties: null
                                required: null
                                type: null
                                not: null
                                properties: null
                                additionalProperties: null
                                description: null
                                format: null
                                $ref: #/components/schemas/User
                                nullable: null
                                readOnly: null
                                writeOnly: null
                                example: null
                                externalDocs: null
                                deprecated: null
                                discriminator: null
                                xml: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }}
                    }
                    required: true
                }
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /methodWithRequestBodyWithoutContent=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: Create user
                description: This can only be done by the logged in user.
                externalDocs: null
                operationId: methodWithRequestBodyWithoutContent
                parameters: null
                requestBody: class RequestBody {
                    description: Created user object
                    content: class Content {
                        {*/*=class MediaType {
                            schema: class Schema {
                                title: null
                                multipleOf: null
                                maximum: null
                                exclusiveMaximum: null
                                minimum: null
                                exclusiveMinimum: null
                                maxLength: null
                                minLength: null
                                pattern: null
                                maxItems: null
                                minItems: null
                                uniqueItems: null
                                maxProperties: null
                                minProperties: null
                                required: null
                                type: null
                                not: null
                                properties: null
                                additionalProperties: null
                                description: null
                                format: null
                                $ref: #/components/schemas/User
                                nullable: null
                                readOnly: null
                                writeOnly: null
                                example: null
                                externalDocs: null
                                deprecated: null
                                discriminator: null
                                xml: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }}
                    }
                    required: true
                }
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /methodWithRequestBodyWithoutContentWithoutImplementation=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: Create user
                description: This can only be done by the logged in user.
                externalDocs: null
                operationId: methodWithRequestBodyWithoutContentWithoutImplementation
                parameters: null
                requestBody: class RequestBody {
                    description: Created user object
                    content: class Content {
                        {*/*=class MediaType {
                            schema: class Schema {
                                title: null
                                multipleOf: null
                                maximum: null
                                exclusiveMaximum: null
                                minimum: null
                                exclusiveMinimum: null
                                maxLength: null
                                minLength: null
                                pattern: null
                                maxItems: null
                                minItems: null
                                uniqueItems: null
                                maxProperties: null
                                minProperties: null
                                required: null
                                type: string
                                not: null
                                properties: null
                                additionalProperties: null
                                description: User description
                                format: null
                                $ref: null
                                nullable: null
                                readOnly: null
                                writeOnly: null
                                example: User Description
                                externalDocs: null
                                deprecated: null
                                discriminator: null
                                xml: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }}
                    }
                    required: true
                }
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /methodWithRequestBodyWithoutAnnotation=class PathItem {
            summary: null
            description: null
            get: null
            put: class Operation {
                tags: null
                summary: Modify user
                description: Modifying user.
                externalDocs: null
                operationId: methodWithRequestBodyWithoutAnnotation
                parameters: null
                requestBody: class RequestBody {
                    description: null
                    content: class Content {
                        {*/*=class MediaType {
                            schema: class Schema {
                                title: null
                                multipleOf: null
                                maximum: null
                                exclusiveMaximum: null
                                minimum: null
                                exclusiveMinimum: null
                                maxLength: null
                                minLength: null
                                pattern: null
                                maxItems: null
                                minItems: null
                                uniqueItems: null
                                maxProperties: null
                                minProperties: null
                                required: null
                                type: null
                                not: null
                                properties: null
                                additionalProperties: null
                                description: null
                                format: null
                                $ref: #/components/schemas/User
                                nullable: null
                                readOnly: null
                                writeOnly: null
                                example: null
                                externalDocs: null
                                deprecated: null
                                discriminator: null
                                xml: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }}
                    }
                    required: null
                }
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /methodWithoutRequestBodyAndTwoParameters=class PathItem {
            summary: null
            description: null
            get: null
            put: null
            post: null
            delete: class Operation {
                tags: null
                summary: Delete user
                description: This can only be done by the logged in user.
                externalDocs: null
                operationId: methodWithoutRequestBodyAndTwoParameters
                parameters: [class Parameter {
                    name: name
                    in: query
                    description: null
                    required: null
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class StringSchema {
                        class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: null
                            format: null
                            $ref: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        type: string
                        _default: null
                        _enum: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }, class Parameter {
                    name: code
                    in: query
                    description: null
                    required: null
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class StringSchema {
                        class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: null
                            format: null
                            $ref: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        type: string
                        _default: null
                        _enum: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }]
                requestBody: null
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /methodWithRequestBodyWithoutAnnotationAndTwoConsumes=class PathItem {
            summary: null
            description: null
            get: null
            put: class Operation {
                tags: null
                summary: Modify pet
                description: Modifying pet.
                externalDocs: null
                operationId: methodWithRequestBodyWithoutAnnotationAndTwoConsumes
                parameters: null
                requestBody: class RequestBody {
                    description: null
                    content: class Content {
                        {application/json=class MediaType {
                            schema: class Schema {
                                title: null
                                multipleOf: null
                                maximum: null
                                exclusiveMaximum: null
                                minimum: null
                                exclusiveMinimum: null
                                maxLength: null
                                minLength: null
                                pattern: null
                                maxItems: null
                                minItems: null
                                uniqueItems: null
                                maxProperties: null
                                minProperties: null
                                required: null
                                type: null
                                not: null
                                properties: null
                                additionalProperties: null
                                description: null
                                format: null
                                $ref: #/components/schemas/User
                                nullable: null
                                readOnly: null
                                writeOnly: null
                                example: null
                                externalDocs: null
                                deprecated: null
                                discriminator: null
                                xml: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }, application/xml=class MediaType {
                            schema: class Schema {
                                title: null
                                multipleOf: null
                                maximum: null
                                exclusiveMaximum: null
                                minimum: null
                                exclusiveMinimum: null
                                maxLength: null
                                minLength: null
                                pattern: null
                                maxItems: null
                                minItems: null
                                uniqueItems: null
                                maxProperties: null
                                minProperties: null
                                required: null
                                type: null
                                not: null
                                properties: null
                                additionalProperties: null
                                description: null
                                format: null
                                $ref: #/components/schemas/User
                                nullable: null
                                readOnly: null
                                writeOnly: null
                                example: null
                                externalDocs: null
                                deprecated: null
                                discriminator: null
                                xml: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }}
                    }
                    required: null
                }
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /methodWithTwoRequestBodyWithoutAnnotationAndTwoConsumes=class PathItem {
            summary: null
            description: null
            get: null
            put: null
            post: class Operation {
                tags: null
                summary: Create pet
                description: Creating pet.
                externalDocs: null
                operationId: methodWithTwoRequestBodyWithoutAnnotationAndTwoConsumes
                parameters: null
                requestBody: class RequestBody {
                    description: null
                    content: class Content {
                        {application/json=class MediaType {
                            schema: class Schema {
                                title: null
                                multipleOf: null
                                maximum: null
                                exclusiveMaximum: null
                                minimum: null
                                exclusiveMinimum: null
                                maxLength: null
                                minLength: null
                                pattern: null
                                maxItems: null
                                minItems: null
                                uniqueItems: null
                                maxProperties: null
                                minProperties: null
                                required: null
                                type: null
                                not: null
                                properties: null
                                additionalProperties: null
                                description: null
                                format: null
                                $ref: #/components/schemas/Pet
                                nullable: null
                                readOnly: null
                                writeOnly: null
                                example: null
                                externalDocs: null
                                deprecated: null
                                discriminator: null
                                xml: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }, application/xml=class MediaType {
                            schema: class Schema {
                                title: null
                                multipleOf: null
                                maximum: null
                                exclusiveMaximum: null
                                minimum: null
                                exclusiveMinimum: null
                                maxLength: null
                                minLength: null
                                pattern: null
                                maxItems: null
                                minItems: null
                                uniqueItems: null
                                maxProperties: null
                                minProperties: null
                                required: null
                                type: null
                                not: null
                                properties: null
                                additionalProperties: null
                                description: null
                                format: null
                                $ref: #/components/schemas/Pet
                                nullable: null
                                readOnly: null
                                writeOnly: null
                                example: null
                                externalDocs: null
                                deprecated: null
                                discriminator: null
                                xml: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }}
                    }
                    required: null
                }
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /methodWithTwoRequestBodyWithAnnotationAndTwoConsumes=class PathItem {
            summary: null
            description: null
            get: null
            put: null
            post: class Operation {
                tags: null
                summary: Create pet
                description: Creating pet.
                externalDocs: null
                operationId: methodWithTwoRequestBodyWithAnnotationAndTwoConsumes
                parameters: null
                requestBody: class RequestBody {
                    description: Request Body User
                    content: class Content {
                        {application/json=class MediaType {
                            schema: class Schema {
                                title: null
                                multipleOf: null
                                maximum: null
                                exclusiveMaximum: null
                                minimum: null
                                exclusiveMinimum: null
                                maxLength: null
                                minLength: null
                                pattern: null
                                maxItems: null
                                minItems: null
                                uniqueItems: null
                                maxProperties: null
                                minProperties: null
                                required: null
                                type: null
                                not: null
                                properties: null
                                additionalProperties: null
                                description: null
                                format: null
                                $ref: #/components/schemas/User
                                nullable: null
                                readOnly: null
                                writeOnly: null
                                example: null
                                externalDocs: null
                                deprecated: null
                                discriminator: null
                                xml: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }, application/xml=class MediaType {
                            schema: class Schema {
                                title: null
                                multipleOf: null
                                maximum: null
                                exclusiveMaximum: null
                                minimum: null
                                exclusiveMinimum: null
                                maxLength: null
                                minLength: null
                                pattern: null
                                maxItems: null
                                minItems: null
                                uniqueItems: null
                                maxProperties: null
                                minProperties: null
                                required: null
                                type: null
                                not: null
                                properties: null
                                additionalProperties: null
                                description: null
                                format: null
                                $ref: #/components/schemas/User
                                nullable: null
                                readOnly: null
                                writeOnly: null
                                example: null
                                externalDocs: null
                                deprecated: null
                                discriminator: null
                                xml: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }}
                    }
                    required: null
                }
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /methodWithOneSimpleRequestBody=class PathItem {
            summary: null
            description: null
            get: null
            put: null
            post: null
            delete: class Operation {
                tags: null
                summary: Delete pet
                description: Deleting pet.
                externalDocs: null
                operationId: methodWithOneSimpleRequestBody
                parameters: null
                requestBody: class RequestBody {
                    description: null
                    content: class Content {
                        {application/json=class MediaType {
                            schema: class IntegerSchema {
                                class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: null
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                type: integer
                                format: int32
                                _default: null
                                _enum: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }, application/xml=class MediaType {
                            schema: class IntegerSchema {
                                class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: null
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                type: integer
                                format: int32
                                _default: null
                                _enum: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }}
                    }
                    required: null
                }
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /complexresponse=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: Find pets
                description: Returns the Pets
                externalDocs: null
                operationId: getPets
                parameters: null
                requestBody: null
                responses: class ApiResponses {
                    {200=class ApiResponse {
                        description: Response inside Operation
                        headers: null
                        content: class Content {
                            {*/*=class MediaType {
                                schema: class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: #/components/schemas/Pet
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                examples: null
                                example: null
                                encoding: null
                            }}
                        }
                        links: null
                        $ref: null
                    }, default=class ApiResponse {
                        description: Default Pet
                        headers: null
                        content: class Content {
                            {*/*=class MediaType {
                                schema: class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: string
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: Default Pet
                                    format: null
                                    $ref: null
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: New Pet
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                examples: null
                                example: null
                                encoding: null
                            }}
                        }
                        links: null
                        $ref: null
                    }, 404=class ApiResponse {
                        description: Couldn't find pet
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /implementationresponse=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: Simple get operation
                description: Defines a simple get operation with no inputs and a complex output object
                externalDocs: null
                operationId: getWithPayloadResponse
                parameters: null
                requestBody: null
                responses: class ApiResponses {
                    {200=class ApiResponse {
                        description: voila!
                        headers: null
                        content: class Content {
                            {application/json=class MediaType {
                                schema: class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: #/components/schemas/SecondSampleResponseSchema
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                examples: null
                                example: null
                                encoding: null
                            }}
                        }
                        links: null
                        $ref: null
                    }, 400=class ApiResponse {
                        description: boo
                        headers: null
                        content: class Content {
                            {*/*=class MediaType {
                                schema: class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: #/components/schemas/GenericError
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                examples: null
                                example: null
                                encoding: null
                            }}
                        }
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: true
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /responseinmethod=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: Find pets
                description: Returns the Pets
                externalDocs: null
                operationId: getPets_1
                parameters: null
                requestBody: null
                responses: class ApiResponses {
                    {200=class ApiResponse {
                        description: Status OK
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /noimplementationresponseresource=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: null
                description: null
                externalDocs: null
                operationId: getUser_3
                parameters: [class Parameter {
                    name: userId
                    in: query
                    description: null
                    required: null
                    deprecated: null
                    allowEmptyValue: null
                    style: null
                    explode: null
                    allowReserved: null
                    schema: class StringSchema {
                        class Schema {
                            title: null
                            multipleOf: null
                            maximum: null
                            exclusiveMaximum: null
                            minimum: null
                            exclusiveMinimum: null
                            maxLength: null
                            minLength: null
                            pattern: null
                            maxItems: null
                            minItems: null
                            uniqueItems: null
                            maxProperties: null
                            minProperties: null
                            required: null
                            type: null
                            not: null
                            properties: null
                            additionalProperties: null
                            description: null
                            format: null
                            $ref: null
                            nullable: null
                            readOnly: null
                            writeOnly: null
                            example: null
                            externalDocs: null
                            deprecated: null
                            discriminator: null
                            xml: null
                        }
                        type: string
                        _default: null
                        _enum: null
                    }
                    examples: null
                    example: null
                    content: null
                    $ref: null
                }]
                requestBody: null
                responses: class ApiResponses {
                    {400=class ApiResponse {
                        description: test description
                        headers: null
                        content: null
                        links: {user=class Link {
                            operationRef: null
                            operationId: getUser
                            parameters: {userId=$request.query.userId}
                            requestBody: null
                            headers: null
                            description: null
                            $ref: null
                        }}
                        $ref: null
                    }, 200=class ApiResponse {
                        description: 200 description
                        headers: null
                        content: null
                        links: {pet=class Link {
                            operationRef: null
                            operationId: getUser
                            parameters: {userId=$request.query.userId}
                            requestBody: null
                            headers: null
                            description: null
                            $ref: null
                        }}
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /noresponse=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: Find pets
                description: Returns the Pets
                externalDocs: null
                operationId: getPets_2
                parameters: null
                requestBody: null
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: class Content {
                            {*/*=class MediaType {
                                schema: class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: #/components/schemas/User
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                examples: null
                                example: null
                                encoding: null
                            }}
                        }
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /responseinoperation=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: Find Users
                description: Returns the Users
                externalDocs: null
                operationId: getUsers
                parameters: null
                requestBody: null
                responses: class ApiResponses {
                    {200=class ApiResponse {
                        description: Status OK
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /priorityresponses=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: Find pets
                description: Returns the Pets
                externalDocs: null
                operationId: getPets_3
                parameters: null
                requestBody: null
                responses: class ApiResponses {
                    {200=class ApiResponse {
                        description: Inside Method Operation
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /security=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: null
                summary: null
                description: description
                externalDocs: null
                operationId: Operation Id
                parameters: null
                requestBody: null
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: [class SecurityRequirement {
                    {security_key=[write:pets, read:pets]}
                }, class SecurityRequirement {
                    {myOauth2Security=[write:pets]}
                }]
                servers: null
            }
            put: class Operation {
                tags: null
                summary: null
                description: description 3
                externalDocs: null
                operationId: Operation Id 3
                parameters: null
                requestBody: class RequestBody {
                    description: null
                    content: class Content {
                        {*/*=class MediaType {
                            schema: class StringSchema {
                                class Schema {
                                    title: null
                                    multipleOf: null
                                    maximum: null
                                    exclusiveMaximum: null
                                    minimum: null
                                    exclusiveMinimum: null
                                    maxLength: null
                                    minLength: null
                                    pattern: null
                                    maxItems: null
                                    minItems: null
                                    uniqueItems: null
                                    maxProperties: null
                                    minProperties: null
                                    required: null
                                    type: null
                                    not: null
                                    properties: null
                                    additionalProperties: null
                                    description: null
                                    format: null
                                    $ref: null
                                    nullable: null
                                    readOnly: null
                                    writeOnly: null
                                    example: null
                                    externalDocs: null
                                    deprecated: null
                                    discriminator: null
                                    xml: null
                                }
                                type: string
                                _default: null
                                _enum: null
                            }
                            examples: null
                            example: null
                            encoding: null
                        }}
                    }
                    required: null
                }
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: [class SecurityRequirement {
                    {security_key=[write:pets, read:pets]}
                }, class SecurityRequirement {
                    {myOauth2Security=[write:pets]}
                }, class SecurityRequirement {
                    {security_key3=[write:pets, read:pets]}
                }]
                servers: null
            }
            post: null
            delete: null
            options: null
            head: null
            patch: class Operation {
                tags: null
                summary: null
                description: description 2
                externalDocs: null
                operationId: Operation Id 2
                parameters: null
                requestBody: null
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: [class SecurityRequirement {
                    {security_key=[write:pets, read:pets]}
                }, class SecurityRequirement {
                    {myOauth2Security=[write:pets]}
                }, class SecurityRequirement {
                    {security_key2=[write:pets, read:pets]}
                }]
                servers: null
            }
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /completetags=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: [Third Tag, Second Tag, Fourth Tag Full, Example Tag, Fifth Tag Full, Sixth Tag]
                summary: null
                description: null
                externalDocs: null
                operationId: getTags
                parameters: null
                requestBody: null
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: [Third Tag, Second Tag, Fourth Tag Full]
                summary: null
                description: null
                externalDocs: null
                operationId: getTags_1
                parameters: null
                requestBody: null
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }, /tagoperation=class PathItem {
            summary: null
            description: null
            get: class Operation {
                tags: [Example Tag, Second Tag]
                summary: null
                description: null
                externalDocs: null
                operationId: getTags_2
                parameters: null
                requestBody: null
                responses: class ApiResponses {
                    {default=class ApiResponse {
                        description: default response
                        headers: null
                        content: null
                        links: null
                        $ref: null
                    }}
                }
                callbacks: null
                deprecated: null
                security: null
                servers: null
            }
            put: null
            post: null
            delete: null
            options: null
            head: null
            patch: null
            trace: null
            servers: null
            parameters: null
            $ref: null
        }}
    }
    components: class Components {
        schemas: {SecondSampleResponseSchema=class Schema {
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            type: object
            not: null
            properties: null
            additionalProperties: null
            description: null
            format: null
            $ref: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
        }, GenericError=class Schema {
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            type: object
            not: null
            properties: null
            additionalProperties: null
            description: null
            format: null
            $ref: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
        }, Category=class Schema {
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            type: object
            not: null
            properties: {id=class IntegerSchema {
                class Schema {
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    type: null
                    not: null
                    properties: null
                    additionalProperties: null
                    description: null
                    format: null
                    $ref: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                type: integer
                format: int64
                _default: null
                _enum: null
            }, name=class StringSchema {
                class Schema {
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    type: null
                    not: null
                    properties: null
                    additionalProperties: null
                    description: null
                    format: null
                    $ref: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                type: string
                _default: null
                _enum: null
            }}
            additionalProperties: null
            description: null
            format: null
            $ref: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: class XML {
                name: Category
                namespace: null
                prefix: null
                attribute: null
                wrapped: null
            }
        }, User=class Schema {
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            type: object
            not: null
            properties: {id=class IntegerSchema {
                class Schema {
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    type: null
                    not: null
                    properties: null
                    additionalProperties: null
                    description: null
                    format: null
                    $ref: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                type: integer
                format: int64
                _default: null
                _enum: null
            }, username=class StringSchema {
                class Schema {
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    type: null
                    not: null
                    properties: null
                    additionalProperties: null
                    description: null
                    format: null
                    $ref: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                type: string
                _default: null
                _enum: null
            }, firstName=class StringSchema {
                class Schema {
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    type: null
                    not: null
                    properties: null
                    additionalProperties: null
                    description: null
                    format: null
                    $ref: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                type: string
                _default: null
                _enum: null
            }, lastName=class StringSchema {
                class Schema {
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    type: null
                    not: null
                    properties: null
                    additionalProperties: null
                    description: null
                    format: null
                    $ref: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                type: string
                _default: null
                _enum: null
            }, email=class StringSchema {
                class Schema {
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    type: null
                    not: null
                    properties: null
                    additionalProperties: null
                    description: null
                    format: null
                    $ref: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                type: string
                _default: null
                _enum: null
            }, password=class StringSchema {
                class Schema {
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    type: null
                    not: null
                    properties: null
                    additionalProperties: null
                    description: null
                    format: null
                    $ref: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                type: string
                _default: null
                _enum: null
            }, phone=class StringSchema {
                class Schema {
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    type: null
                    not: null
                    properties: null
                    additionalProperties: null
                    description: null
                    format: null
                    $ref: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                type: string
                _default: null
                _enum: null
            }, userStatus=class IntegerSchema {
                class Schema {
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    type: null
                    not: null
                    properties: null
                    additionalProperties: null
                    description: User Status
                    format: null
                    $ref: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                type: integer
                format: int32
                _default: null
                _enum: null
            }}
            additionalProperties: null
            description: null
            format: null
            $ref: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: class XML {
                name: User
                namespace: null
                prefix: null
                attribute: null
                wrapped: null
            }
        }, SampleResponseSchema=class Schema {
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            type: object
            not: null
            properties: null
            additionalProperties: null
            description: null
            format: null
            $ref: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
        }, SubscriptionResponse=class Schema {
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            type: object
            not: null
            properties: {subscriptionId=class StringSchema {
                class Schema {
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    type: null
                    not: null
                    properties: null
                    additionalProperties: null
                    description: null
                    format: null
                    $ref: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                type: string
                _default: null
                _enum: null
            }}
            additionalProperties: null
            description: null
            format: null
            $ref: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: null
        }, Tag=class Schema {
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            type: object
            not: null
            properties: {id=class IntegerSchema {
                class Schema {
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    type: null
                    not: null
                    properties: null
                    additionalProperties: null
                    description: null
                    format: null
                    $ref: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                type: integer
                format: int64
                _default: null
                _enum: null
            }, name=class StringSchema {
                class Schema {
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    type: null
                    not: null
                    properties: null
                    additionalProperties: null
                    description: null
                    format: null
                    $ref: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                type: string
                _default: null
                _enum: null
            }}
            additionalProperties: null
            description: null
            format: null
            $ref: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: class XML {
                name: Tag
                namespace: null
                prefix: null
                attribute: null
                wrapped: null
            }
        }, Pet=class Schema {
            title: null
            multipleOf: null
            maximum: null
            exclusiveMaximum: null
            minimum: null
            exclusiveMinimum: null
            maxLength: null
            minLength: null
            pattern: null
            maxItems: null
            minItems: null
            uniqueItems: null
            maxProperties: null
            minProperties: null
            required: null
            type: object
            not: null
            properties: {id=class IntegerSchema {
                class Schema {
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    type: null
                    not: null
                    properties: null
                    additionalProperties: null
                    description: null
                    format: null
                    $ref: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                type: integer
                format: int64
                _default: null
                _enum: null
            }, category=class Schema {
                title: null
                multipleOf: null
                maximum: null
                exclusiveMaximum: null
                minimum: null
                exclusiveMinimum: null
                maxLength: null
                minLength: null
                pattern: null
                maxItems: null
                minItems: null
                uniqueItems: null
                maxProperties: null
                minProperties: null
                required: null
                type: null
                not: null
                properties: null
                additionalProperties: null
                description: null
                format: null
                $ref: #/components/schemas/Category
                nullable: null
                readOnly: null
                writeOnly: null
                example: null
                externalDocs: null
                deprecated: null
                discriminator: null
                xml: null
            }, name=class StringSchema {
                class Schema {
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    type: null
                    not: null
                    properties: null
                    additionalProperties: null
                    description: null
                    format: null
                    $ref: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                type: string
                _default: null
                _enum: null
            }, photoUrls=class ArraySchema {
                class Schema {
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    type: null
                    not: null
                    properties: null
                    additionalProperties: null
                    description: null
                    format: null
                    $ref: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: class XML {
                        name: null
                        namespace: null
                        prefix: null
                        attribute: null
                        wrapped: true
                    }
                }
                type: array
                items: class StringSchema {
                    class Schema {
                        title: null
                        multipleOf: null
                        maximum: null
                        exclusiveMaximum: null
                        minimum: null
                        exclusiveMinimum: null
                        maxLength: null
                        minLength: null
                        pattern: null
                        maxItems: null
                        minItems: null
                        uniqueItems: null
                        maxProperties: null
                        minProperties: null
                        required: null
                        type: null
                        not: null
                        properties: null
                        additionalProperties: null
                        description: null
                        format: null
                        $ref: null
                        nullable: null
                        readOnly: null
                        writeOnly: null
                        example: null
                        externalDocs: null
                        deprecated: null
                        discriminator: null
                        xml: class XML {
                            name: photoUrl
                            namespace: null
                            prefix: null
                            attribute: null
                            wrapped: null
                        }
                    }
                    type: string
                    _default: null
                    _enum: null
                }
            }, tags=class ArraySchema {
                class Schema {
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    type: null
                    not: null
                    properties: null
                    additionalProperties: null
                    description: null
                    format: null
                    $ref: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: class XML {
                        name: null
                        namespace: null
                        prefix: null
                        attribute: null
                        wrapped: true
                    }
                }
                type: array
                items: class Schema {
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    type: null
                    not: null
                    properties: null
                    additionalProperties: null
                    description: null
                    format: null
                    $ref: #/components/schemas/Tag
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: class XML {
                        name: tag
                        namespace: null
                        prefix: null
                        attribute: null
                        wrapped: null
                    }
                }
            }, status=class StringSchema {
                class Schema {
                    title: null
                    multipleOf: null
                    maximum: null
                    exclusiveMaximum: null
                    minimum: null
                    exclusiveMinimum: null
                    maxLength: null
                    minLength: null
                    pattern: null
                    maxItems: null
                    minItems: null
                    uniqueItems: null
                    maxProperties: null
                    minProperties: null
                    required: null
                    type: null
                    not: null
                    properties: null
                    additionalProperties: null
                    description: pet status in the store
                    format: null
                    $ref: null
                    nullable: null
                    readOnly: null
                    writeOnly: null
                    example: null
                    externalDocs: null
                    deprecated: null
                    discriminator: null
                    xml: null
                }
                type: string
                _default: null
                _enum: [available,pending,sold]
            }}
            additionalProperties: null
            description: null
            format: null
            $ref: null
            nullable: null
            readOnly: null
            writeOnly: null
            example: null
            externalDocs: null
            deprecated: null
            discriminator: null
            xml: class XML {
                name: Pet
                namespace: null
                prefix: null
                attribute: null
                wrapped: null
            }
        }}
        responses: null
        parameters: null
        examples: null
        requestBodies: null
        headers: null
        securitySchemes: {myOauth2Security=class SecurityScheme {
            type: oauth2
            description: myOauthSecurity Description
            name: myOauth2Security
            in: header
            scheme: null
            bearerFormat: null
            flows: class OAuthFlows {
                implicit: class OAuthFlow {
                    authorizationUrl: http://x.com
                    tokenUrl: null
                    refreshUrl: null
                    scopes: class Scopes {
                        {write:pets=modify pets in your account}
                    }
                }
                password: null
                clientCredentials: null
                authorizationCode: null
            }
            openIdConnectUrl: null
            $ref: null
        }}
        links: null
        callbacks: null
    }
}